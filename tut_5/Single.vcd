$timescale 1ps $end
$scope module Single $end
$var wire 1 ! clk $end
$var wire 1 " io_valid $end
$var wire 1 # io_boot $end
$var wire 1 $ io_isWr $end
$var wire 10 % io_wrAddr $end
$var wire 10 & pc $end
$var wire 10 ' io_pc $end
$var wire 32 ( hi $end
$var wire 32 ) lo $end
$var wire 32 * io_out $end
$var wire 32 + io_wrData $end
$var wire 32 , io_inst $end
$upscope $end
$enddefinitions $end
$dumpvars
$end
#0
b0 !
b0 "
b0 #
b1 $
b0000000000 %
b0000000000 &
b0000000000 '
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
#2
b1 !
b00000000000000110111100000000000 +
#3
b0 !
#4
b1 !
b0000000001 %
b00000000011000110111100000000000 +
b00000000000000110111100000000000 ,
#5
b0 !
#6
b1 !
b0000000010 %
#7
b0 !
#8
b1 !
b0000000011 %
#9
b0 !
#10
b1 !
b0000000100 %
b00000000011000110011000000000000 +
#11
b0 !
#12
b1 !
b0000000101 %
b00000100000000000000000000000000 +
#13
b0 !
#14
b1 !
b0000000110 %
#15
b0 !
#16
b1 !
b0000000111 %
#17
b0 !
#18
b1 !
b0000001000 %
#19
b0 !
#20
b1 !
b1 #
b0 $
#21
b0 !
#22
b1 !
b0 #
#23
b0 !
#24
b1 !
b0000000100 &
b0000000100 '
b00000000000000000000000000001111 *
b00000000011000110111100000000000 ,
#25
b0 !
#26
b1 !
b0000001000 &
b0000001000 '
b00000000000000000000000000011110 *
#27
b0 !
#28
b1 !
b0000001100 &
b0000001100 '
b00000000000000000000000000101101 *
#29
b0 !
#30
b1 !
b0000010000 &
b0000010000 '
b00000000000000000000000000111100 *
b00000000011000110011000000000000 ,
#31
b0 !
#32
b1 !
b0000010100 &
b0000010100 '
b00000000000000000000000001000010 *
b00000100000000000000000000000000 ,
#33
b0 !
